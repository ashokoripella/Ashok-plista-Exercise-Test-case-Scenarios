"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsonwebtoken_1 = require("jsonwebtoken");
const consts_1 = require("./consts");
exports.DASHBOARD_LOCATION_NOT_DEFINED = 'The \'TESTCAFE_DASHBOARD_URL\' environment variable is not defined.';
exports.AUTHENTICATION_TOKEN_NOT_DEFINED = 'The \'TESTCAFE_DASHBOARD_AUTHENTICATION_TOKEN\' environment variable is not defined.';
exports.FETCH_NETWORK_CONNECTION_ERROR = 'Connection failed';
exports.createReportUrlMessage = (reportId, authenticationToken, dashboardUrl) => {
    const token = jsonwebtoken_1.decode(authenticationToken);
    return `Task execution report: ${dashboardUrl}/runs/${token.projectId}/${encodeURIComponent(reportId)}`;
};
exports.createFileUploadError = (uploadId, filePath) => `Failed to upload visual artifacts. Upload ID: ${uploadId}, file path: ${filePath}.`;
exports.createTestUploadError = (uploadId, testName) => `Failed to upload a test log. Upload ID: ${uploadId}, test name: ${testName}.`;
exports.createGetUploadInfoError = (uploadEntityId, response) => `Cannot get an upload URL. Upload entity ID: ${uploadEntityId}. Response: ${response}`;
exports.createLongBuildIdError = (buildId) => `Build ID cannot be longer than ${consts_1.MAX_BUILD_ID_LENGTH} symbols. Build ID: ${buildId}.`;
exports.createReporterMethodName = (reporterMethodName, errorDetails) => `Error occurred in the "dashboard" reporter's "${reporterMethodName}" method. Error details: ${errorDetails}`;
